
import React, { useState, useMemo } from 'react';
import type { Timetable, ScheduleEntry } from '../types';
import { daysOfWeek, timeSlots } from '../types';
import TimetableView from './TimetableView';
import Header from './Header';

// Sample master timetable data. In a real app, this would be fetched from a backend.
const sampleMasterTimetable: Timetable = {
  monday: [
    { timeSlot: '09:00 - 10:00', courseCode: 'CS461', courseName: 'Intro to AI', facultyName: 'Dr. Alan Turing', classroomName: 'Hall A', department: 'Computer Science', studentGroup: 'Year 4 CS' },
    { timeSlot: '10:00 - 11:00', courseCode: 'CS201', courseName: 'Data Structures', facultyName: 'Dr. Alan Turing', classroomName: 'Lab B', department: 'Computer Science', studentGroup: 'Year 2 CS' },
  ],
  tuesday: [
    { timeSlot: '11:00 - 12:00', courseCode: 'CS201', courseName: 'Data Structures', facultyName: 'Dr. Ada Lovelace', classroomName: 'Hall A', department: 'Computer Science', studentGroup: 'Year 2 CS' },
  ],
  wednesday: [],
  thursday: [],
  friday: [
    { timeSlot: '09:00 - 10:00', courseCode: 'MA202', courseName: 'Calculus II', facultyName: 'Dr. Isaac Newton', classroomName: 'Room C101', department: 'Mathematics', studentGroup: 'Year 2 Math' },
  ]
};

const studentGroups = ['Year 2 CS', 'Year 4 CS', 'Year 2 Math'];

const StudentDashboard: React.FC<{ userEmail: string; onLogout: () => void; }> = ({ userEmail, onLogout }) => {
  const [selectedGroup, setSelectedGroup] = useState<string>(studentGroups[0]);

  const filteredTimetable = useMemo(() => {
    if (!selectedGroup) return sampleMasterTimetable;

    const newTimetable: Timetable = {};
    for (const day of Object.keys(sampleMasterTimetable) as (keyof Timetable)[]) {
      newTimetable[day] = (sampleMasterTimetable[day] || []).filter(
        (entry: ScheduleEntry) => entry.studentGroup === selectedGroup
      );
    }
    return newTimetable;
  }, [selectedGroup]);

  return (
    <div className="min-h-screen bg-gray-100">
      <Header userEmail={userEmail} onLogout={onLogout} role="Student" />
      <main className="p-4 md:p-8">
        <div className="max-w-7xl mx-auto">
          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex flex-col md:flex-row justify-between items-center mb-6">
              <h1 className="text-2xl font-bold text-gray-800 mb-4 md:mb-0">My Timetable</h1>
              <div>
                <label htmlFor="student-group" className="mr-2 font-semibold text-gray-700">Select Your Group:</label>
                <select
                  id="student-group"
                  value={selectedGroup}
                  onChange={(e) => setSelectedGroup(e.target.value)}
                  className="p-2 border border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500"
                >
                  {studentGroups.map(group => (
                    <option key={group} value={group}>{group}</option>
                  ))}
                </select>
              </div>
            </div>
            <p className="text-gray-600 mb-6">Displaying timetable for <span className="font-bold text-primary-700">{selectedGroup}</span>. The data shown here is a sample. In a live system, this would reflect the latest schedule generated by the university authority.</p>
            <TimetableView timetable={filteredTimetable} days={daysOfWeek} timeSlots={timeSlots} />
          </div>
        </div>
      </main>
    </div>
  );
};

export default StudentDashboard;
